{"ast":null,"code":"var _jsxFileName = \"/Users/sora/Documents/work/solidity/UNCHAIN/ETH-NFT-game/nft-game-starter-project/src/Components/Arena/index.js\",\n    _s = $RefreshSig$();\n\n// index.js\nimport React, { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { CONTRACT_ADDRESS, transformCharacterData } from \"../../constants\";\nimport myEpicGame from \"../../utils/MyEpicGame.json\";\nimport \"./Arena.css\"; // フロントエンドにNFTキャラクターを表示するため、characterNFTのメタデータを渡します。\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Arena = _ref => {\n  _s();\n\n  let {\n    characterNFT\n  } = _ref;\n  // コントラクトのデータを保有する状態変数を初期化します。\n  const [gameContract, setGameContract] = useState(null); // NFTキャラクターがボスを攻撃する際に使用する関数を定義します。\n\n  const runAttackAction = async () => {}; // ボスのメタデータを保存する状態変数を初期化します。\n\n\n  const [boss, setBoss] = useState(null); // ページがロードされると下記が実行されます。\n\n  useEffect(() => {\n    // コントラクトからボスのメタデータを取得し、bossを設定する非同期関数 fetchBoss を設定します。\n    const fetchBoss = async () => {\n      const bossTxn = await gameContract.getBigBoss();\n      console.log(\"Boss:\", bossTxn);\n      setBoss(transformCharacterData(bossTxn));\n    };\n\n    if (gameContract) {\n      // コントラクトの準備ができたら、ボスのメタデータを取得します。\n      fetchBoss();\n    }\n  }, [gameContract]); // ページがロードされると下記が実行されます。\n\n  useEffect(() => {\n    const {\n      ethereum\n    } = window;\n\n    if (ethereum) {\n      const provider = new ethers.providers.Web3Provider(ethereum);\n      const signer = provider.getSigner();\n      const gameContract = new ethers.Contract(CONTRACT_ADDRESS, myEpicGame.abi, signer);\n      setGameContract(gameContract);\n    } else {\n      console.log(\"Ethereum object not found\");\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"arena-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u30DC\\u30B9\\u3092\\u8868\\u793A\\u3057\\u307E\\u3059\\u3002\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"NFT \\u30AD\\u30E3\\u30E9\\u30AF\\u30BF\\u30FC\\u3092\\u8868\\u793A\\u3057\\u307E\\u3059\\u3002\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Arena, \"hffOBmb6uNS/O642ivQyNGpPgu8=\");\n\n_c = Arena;\nexport default Arena;\n\nvar _c;\n\n$RefreshReg$(_c, \"Arena\");","map":{"version":3,"names":["React","useEffect","useState","ethers","CONTRACT_ADDRESS","transformCharacterData","myEpicGame","Arena","characterNFT","gameContract","setGameContract","runAttackAction","boss","setBoss","fetchBoss","bossTxn","getBigBoss","console","log","ethereum","window","provider","providers","Web3Provider","signer","getSigner","Contract","abi"],"sources":["/Users/sora/Documents/work/solidity/UNCHAIN/ETH-NFT-game/nft-game-starter-project/src/Components/Arena/index.js"],"sourcesContent":["// index.js\nimport React, { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { CONTRACT_ADDRESS, transformCharacterData } from \"../../constants\";\nimport myEpicGame from \"../../utils/MyEpicGame.json\";\nimport \"./Arena.css\";\n// フロントエンドにNFTキャラクターを表示するため、characterNFTのメタデータを渡します。\nconst Arena = ({ characterNFT }) => {\n  // コントラクトのデータを保有する状態変数を初期化します。\n  const [gameContract, setGameContract] = useState(null);\n\n  // NFTキャラクターがボスを攻撃する際に使用する関数を定義します。\n  const runAttackAction = async () => {};\n\n  // ボスのメタデータを保存する状態変数を初期化します。\n  const [boss, setBoss] = useState(null);\n\n  // ページがロードされると下記が実行されます。\n  useEffect(() => {\n    // コントラクトからボスのメタデータを取得し、bossを設定する非同期関数 fetchBoss を設定します。\n    const fetchBoss = async () => {\n      const bossTxn = await gameContract.getBigBoss();\n      console.log(\"Boss:\", bossTxn);\n      setBoss(transformCharacterData(bossTxn));\n    };\n    if (gameContract) {\n      // コントラクトの準備ができたら、ボスのメタデータを取得します。\n      fetchBoss();\n    }\n  }, [gameContract]);\n\n  // ページがロードされると下記が実行されます。\n  useEffect(() => {\n    const { ethereum } = window;\n    if (ethereum) {\n      const provider = new ethers.providers.Web3Provider(ethereum);\n      const signer = provider.getSigner();\n      const gameContract = new ethers.Contract(\n        CONTRACT_ADDRESS,\n        myEpicGame.abi,\n        signer\n      );\n      setGameContract(gameContract);\n    } else {\n      console.log(\"Ethereum object not found\");\n    }\n  }, []);\n  return (\n    <div className=\"arena-container\">\n      {/* ボス */}\n      <p>ボスを表示します。</p>\n      {/* NFT キャラクター */}\n      <p>NFT キャラクターを表示します。</p>\n    </div>\n  );\n};\nexport default Arena;\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,gBAAT,EAA2BC,sBAA3B,QAAyD,iBAAzD;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAO,aAAP,C,CACA;;;;AACA,MAAMC,KAAK,GAAG,QAAsB;EAAA;;EAAA,IAArB;IAAEC;EAAF,CAAqB;EAClC;EACA,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,IAAD,CAAhD,CAFkC,CAIlC;;EACA,MAAMS,eAAe,GAAG,YAAY,CAAE,CAAtC,CALkC,CAOlC;;;EACA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,IAAD,CAAhC,CARkC,CAUlC;;EACAD,SAAS,CAAC,MAAM;IACd;IACA,MAAMa,SAAS,GAAG,YAAY;MAC5B,MAAMC,OAAO,GAAG,MAAMN,YAAY,CAACO,UAAb,EAAtB;MACAC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBH,OAArB;MACAF,OAAO,CAACR,sBAAsB,CAACU,OAAD,CAAvB,CAAP;IACD,CAJD;;IAKA,IAAIN,YAAJ,EAAkB;MAChB;MACAK,SAAS;IACV;EACF,CAXQ,EAWN,CAACL,YAAD,CAXM,CAAT,CAXkC,CAwBlC;;EACAR,SAAS,CAAC,MAAM;IACd,MAAM;MAAEkB;IAAF,IAAeC,MAArB;;IACA,IAAID,QAAJ,EAAc;MACZ,MAAME,QAAQ,GAAG,IAAIlB,MAAM,CAACmB,SAAP,CAAiBC,YAArB,CAAkCJ,QAAlC,CAAjB;MACA,MAAMK,MAAM,GAAGH,QAAQ,CAACI,SAAT,EAAf;MACA,MAAMhB,YAAY,GAAG,IAAIN,MAAM,CAACuB,QAAX,CACnBtB,gBADmB,EAEnBE,UAAU,CAACqB,GAFQ,EAGnBH,MAHmB,CAArB;MAKAd,eAAe,CAACD,YAAD,CAAf;IACD,CATD,MASO;MACLQ,OAAO,CAACC,GAAR,CAAY,2BAAZ;IACD;EACF,CAdQ,EAcN,EAdM,CAAT;EAeA,oBACE;IAAK,SAAS,EAAC,iBAAf;IAAA,wBAEE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAIE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAQD,CAhDD;;GAAMX,K;;KAAAA,K;AAiDN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}